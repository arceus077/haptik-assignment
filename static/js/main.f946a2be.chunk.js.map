{"version":3,"sources":["favfalse.svg","Components/AddFavourite.jsx","favtrue.svg","Components/RemoveFavourite.jsx","delete.svg","Components/Delete.jsx","rightarrow.svg","leftarrow.svg","Components/Pagination.jsx","App.js","reportWebVitals.js","index.js"],"names":["AddFavourite","props","addFavourite","className","onClick","src","favoriteFalse","alt","RemoveFavourite","removeFavourite","favoriteTrue","Delete","deleteFriend","deleteSvg","Pagination","display","totalPage","page","previousPage","nextPage","setPage","elements","i","push","value","style","backgroundColor","padding","borderLeft","borderRight","left","right","offset","App","useState","friends","setFriends","searchedFriends","setSearchedFriends","sortBy","setSortBy","text","setText","setDisplay","setTotalPage","calculatePagination","total","newTotal","Math","ceil","console","log","name","friendIndex","map","v","indexOf","searchedIndex","newData","sort","a","b","nameA","toUpperCase","nameB","newSearchedFriends","favourite","filter","friend","length","border","htmlFor","id","onChange","e","target","favA","val","type","placeholder","onKeyPress","key","trim","split","test","availableFriends","toLowerCase","includes","find","slice","f","paddingLeft","fontSize","fontWeight","fontFamily","marginTop","newFriend","addFriend","newPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f946a2be.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/favfalse.039b6ba5.svg\";","import favoriteFalse from '../favfalse.svg';\r\nimport './Components.css';\r\n\r\nfunction AddFavourite(props) {\r\n    const { addFavourite } = props;\r\n  \r\n    return (\r\n      <span className=\"addfav\" onClick={addFavourite}>\r\n        <img src={favoriteFalse} className=\"\" alt=\"Add Favourite\" />\r\n      </span>\r\n    );\r\n  }\r\n\r\nexport default AddFavourite;\r\n","export default __webpack_public_path__ + \"static/media/favtrue.2b4b73ad.svg\";","import favoriteTrue from '../favtrue.svg';\r\n\r\nfunction RemoveFavourite(props) {\r\n  const { removeFavourite } = props;\r\n\r\n  return (\r\n    <span className=\"remfav\" onClick={removeFavourite}>\r\n      <img src={favoriteTrue} className=\"\" alt=\"Add Favourite\" />\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default RemoveFavourite;\r\n","export default __webpack_public_path__ + \"static/media/delete.13954a2c.svg\";","import deleteSvg from '../delete.svg';\r\n\r\nfunction Delete(props) {\r\n    const { deleteFriend } = props;\r\n  \r\n    return (\r\n      <span className=\"remove\" onClick={deleteFriend}>\r\n        <img src={deleteSvg} className=\"\" alt=\"Delete Friend\" />\r\n      </span>\r\n    );\r\n  }\r\n\r\nexport default Delete;\r\n","export default __webpack_public_path__ + \"static/media/rightarrow.3c15120b.svg\";","export default __webpack_public_path__ + \"static/media/leftarrow.8638bb38.svg\";","import right from '../rightarrow.svg';\r\nimport left from '../leftarrow.svg';\r\n\r\nfunction Pagination(props) {\r\n    const { display, totalPage, page, previousPage, nextPage, setPage } = props;\r\n  \r\n    const elements = [];\r\n    for(let i=0; i<totalPage; i++){\r\n      // push the component to elements!\r\n      elements.push(\r\n        <div\r\n          className=\"pages\"\r\n          key={i}\r\n          value={i+1}\r\n          style={{\r\n            backgroundColor: page === i ? 'rgb(0 212 243)' : '',\r\n            padding: '5px 5px',\r\n            borderLeft: i === 0 ? '2px solid black' : '',\r\n            borderRight: i === 0 ? '2px solid black' : '',\r\n          }}\r\n          onClick={() => setPage(i)}\r\n        >\r\n          {i+1}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return totalPage > 0 && display ? (\r\n      <div className=\"pagination\" >\r\n        {\r\n          page > 0 ? \r\n          <div\r\n            onClick={previousPage}\r\n          >\r\n            <img src={left} className=\"prev\" alt=\"Previous Page\" />\r\n          </div> : null\r\n        }\r\n        {elements}\r\n        {\r\n          page < (totalPage - 1) ?\r\n          <div onClick={nextPage} className=\"next\">\r\n            <img src={right} className=\"\" alt=\"Next Page\" />\r\n          </div> : null\r\n        }\r\n      </div>\r\n    ) : null;\r\n  }\r\n\r\nexport default Pagination;\r\n","import { useState } from 'react';\r\nimport AddFavourite from './Components/AddFavourite';\r\nimport RemoveFavourite from './Components/RemoveFavourite';\r\nimport Delete from './Components/Delete';\r\nimport Pagination from './Components/Pagination';\r\nimport './App.css';\r\n\r\nconst limit = 4;\r\nlet offset = 0;\r\n\r\nfunction App() {\r\n  const [friends, setFriends] = useState([]);\r\n  const [searchedFriends, setSearchedFriends] = useState([]);\r\n  const [sortBy, setSortBy] = useState('name');\r\n  const [text, setText] = useState('');\r\n  const [display, setDisplay] = useState(true);\r\n  const [page, setPage] = useState(0);\r\n  const [totalPage, setTotalPage] = useState(0);\r\n\r\n  const calculatePagination = (total) => {\r\n    const newTotal = Math.ceil(total/limit);\r\n    if (newTotal < totalPage) {\r\n      offset = page > 0 ? (page-1) * limit : 0;\r\n      const newPage = page > 0 ? page - 1 : 0;\r\n      setPage(newPage);\r\n    }\r\n    console.log(newTotal, offset, page);\r\n    setTotalPage(newTotal);\r\n  };\r\n\r\n  const searchName = (e) => {\r\n    if (e.key !== 'Enter') {\r\n      return;\r\n    }\r\n    if (!text.trim()) {\r\n      return setDisplay(true);\r\n    }\r\n    setDisplay(false);\r\n    if (text.trim().split(' ').length > 3) {\r\n      return setSearchedFriends([]);\r\n    }\r\n    if (!/^[a-z a-z]+$/i.test(text.trim())) {\r\n      return setSearchedFriends([]);\r\n    }\r\n    const availableFriends = friends.filter(v => v.name.toLowerCase().includes(text.trim().toLowerCase()));\r\n    if (availableFriends?.length > 0 && text.trim()) {\r\n      if (availableFriends.find(v => v.name.toLowerCase() === text.trim().toLowerCase())) {\r\n        setSearchedFriends([...availableFriends]);\r\n      } else {\r\n        setSearchedFriends([{ name: text.trim(), friend: false, favourite: false }, ...availableFriends]);\r\n      }\r\n    } else {\r\n      setSearchedFriends([{ name: text.trim(), friend: false, favourite: false }]);\r\n    }\r\n  };\r\n\r\n  const addFriend = ({name}) => {\r\n    let newSearchedFriends = [...searchedFriends];\r\n    let newFriend = [...friends, { name: name, friend: true, favourite: false }].sort((a,b) => {\r\n      let nameA = a.name.toUpperCase(); // ignore upper and lowercase\r\n      let nameB = b.name.toUpperCase(); // ignore upper and lowercase\r\n      if (nameA < nameB) {\r\n        return -1;\r\n      }\r\n      if (nameA > nameB) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    });\r\n    setSortBy('name');\r\n    const searchedIndex = searchedFriends.map(v => v.name).indexOf(name);\r\n    newSearchedFriends[searchedIndex] = { ...newSearchedFriends[searchedIndex], friend: true };\r\n    setFriends(newFriend);\r\n    setSearchedFriends(newSearchedFriends);\r\n    calculatePagination(newFriend.length);\r\n    setDisplay(false);\r\n  };\r\n\r\n  const addFavourite = (name) => {\r\n    const friendIndex = friends.map(v => v.name).indexOf(name);\r\n    const searchedIndex = searchedFriends.map(v => v.name).indexOf(name);\r\n    let newData = [...friends].sort((a,b) => {\r\n      let nameA = a.name.toUpperCase(); // ignore upper and lowercase\r\n      let nameB = b.name.toUpperCase(); // ignore upper and lowercase\r\n      if (nameA < nameB) {\r\n        return -1;\r\n      }\r\n      if (nameA > nameB) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    });\r\n    setSortBy('name');\r\n    let newSearchedFriends = [...searchedFriends];\r\n    newData[friendIndex] = { ...friends[friendIndex], favourite: true };\r\n    newSearchedFriends[searchedIndex] = { ...newSearchedFriends[searchedIndex], favourite: true };\r\n    setFriends(newData);\r\n    setSearchedFriends(newSearchedFriends);\r\n  };\r\n\r\n  const removeFavourite = (name) => {\r\n    const friendIndex = friends.map(v => v.name).indexOf(name);\r\n    const searchedIndex = searchedFriends.map(v => v.name).indexOf(name);\r\n    let newData = [...friends].sort((a,b) => {\r\n      let nameA = a.name.toUpperCase(); // ignore upper and lowercase\r\n      let nameB = b.name.toUpperCase(); // ignore upper and lowercase\r\n      if (nameA < nameB) {\r\n        return -1;\r\n      }\r\n      if (nameA > nameB) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    });\r\n    setSortBy('name');\r\n    let newSearchedFriends = [...searchedFriends];\r\n    newData[friendIndex] = { ...friends[friendIndex], favourite: false };\r\n    newSearchedFriends[searchedIndex] = { ...newSearchedFriends[searchedIndex], favourite: false };\r\n    setFriends(newData);\r\n    setSearchedFriends(newSearchedFriends);\r\n  };\r\n\r\n  const deleteFriend = (name) => {\r\n    let newSearchedFriends = [...searchedFriends];\r\n    const searchedIndex = searchedFriends.map(v => v.name).indexOf(name);\r\n    let newData = friends.filter(v => v.name !== name).sort((a,b) => {\r\n      let nameA = a.name.toUpperCase(); // ignore upper and lowercase\r\n      let nameB = b.name.toUpperCase(); // ignore upper and lowercase\r\n      if (nameA < nameB) {\r\n        return -1;\r\n      }\r\n      if (nameA > nameB) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    });\r\n    setSortBy('name');\r\n    newSearchedFriends[searchedIndex] = { ...newSearchedFriends[searchedIndex], friend: false, favourite: false };\r\n    setFriends(newData);\r\n    setSearchedFriends(newSearchedFriends);\r\n    calculatePagination(newData.length);\r\n  };\r\n\r\n  const searchedList = () => {\r\n    if (searchedFriends?.length === 0) {\r\n      return (\r\n        <div>\r\n          Enter A Valid Name\r\n        </div>\r\n      )\r\n    }\r\n    return (\r\n      searchedFriends.map((f, i) => {\r\n        return (\r\n          <div key={i}>\r\n            <div key={i} className=\"searched\">\r\n            <div style={{ paddingLeft: '4px' }}>\r\n              <span style={{ fontSize: '25px', fontWeight: '700px', fontFamily: 'monospace' }}>\r\n                {f.name}\r\n              </span>\r\n              {\r\n                f.friend ? <div style={{ fontSize: '10px' }}>is your friend</div> :\r\n                <div style={{ fontSize: '10px' }}>is not your friend</div>\r\n              }\r\n              </div>\r\n              {!f.friend ? \r\n                <button onClick={() => addFriend(f)}>\r\n                  Add Friend\r\n                </button> :\r\n                <div style={{ marginTop: '8px' }}>\r\n                  {\r\n                    f.favourite ?\r\n                    <RemoveFavourite removeFavourite={() => removeFavourite(f.name)} /> :\r\n                    <AddFavourite addFavourite={() => addFavourite(f.name)} />\r\n                  }\r\n                  <Delete deleteFriend={() => deleteFriend(f.name)} />\r\n                </div>\r\n              }\r\n            </div>\r\n            <hr/>\r\n          </div>\r\n          \r\n        )\r\n    }));\r\n  }\r\n\r\n  const changeValue = (e) => {\r\n    const val = e.target.value;\r\n    if (!val) {\r\n      setDisplay(true);\r\n    }\r\n    setText(val);\r\n  };\r\n\r\n  const setPageNo = (value) => {\r\n    offset = value * limit || 0;\r\n    setPage(value || 0);\r\n  };\r\n\r\n  const sortValues = (e) => {\r\n    setSortBy(e.target.value);\r\n    let newData = []\r\n    if (e.target.value === 'name') {\r\n      newData = friends.sort((a, b) => {\r\n        let nameA = a.name.toUpperCase(); // ignore upper and lowercase\r\n        let nameB = b.name.toUpperCase(); // ignore upper and lowercase\r\n        if (nameA < nameB) {\r\n          return -1;\r\n        }\r\n        if (nameA > nameB) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n    } else {\r\n      newData = friends.sort((a, b) => {\r\n        let favA = a.favourite;\r\n        let favB = b.favourite;\r\n        return (favA === favB) ? 0 : favA ? -1 : 1;\r\n      });\r\n    }\r\n    setFriends(newData);\r\n  };\r\n\r\n  const changeNextPage = () => {\r\n    const newPage = page < totalPage - 1 ? page + 1 : totalPage - 1;\r\n    offset = newPage * limit || 0;\r\n    setPage(newPage);\r\n  };\r\n\r\n  const changePreviousPage = () => {\r\n    const newPage = page > 0 ? page - 1 : 0;\r\n    offset = newPage * limit || 0;\r\n    setPage(newPage);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div className=\"cont\">\r\n          <div className=\"header\">\r\n            <p>Friends List</p>\r\n          </div>\r\n          <div style={{ border: '2px solid bule' }}>\r\n            <div className='drop'>\r\n              <label htmlFor=\"sort-select\">Sort By: </label>\r\n              <select\r\n                name=\"sort\"\r\n                id=\"sort-select\"\r\n                value={sortBy} \r\n                onChange={sortValues}\r\n              >\r\n                  <option value=\"favourite\">Favourites</option>\r\n                  <option value=\"name\">Name</option>\r\n              </select>\r\n            </div>\r\n            <input\r\n              className='search'\r\n              value={text}\r\n              onChange = {changeValue}\r\n              type={'search'}\r\n              placeholder={`Enter your friend's name`}\r\n              onKeyPress={searchName}\r\n            />\r\n            {\r\n              display ? friends.slice(offset, offset + limit).map((f, i) => {\r\n                return (\r\n                  <div key={i}>\r\n                    <div key={i} className=\"searched\">\r\n                    <div style={{ paddingLeft: '4px' }}>\r\n                    <span style={{ fontSize: '25px', fontWeight: '700px', fontFamily: 'monospace' }}>\r\n                      {f.name}\r\n                    </span>\r\n                    <div style={{ fontSize: '10px' }}>is your friend</div>\r\n                    </div>\r\n                      <div style={{ marginTop: '8px' }}>\r\n                        {\r\n                          f.favourite ?\r\n                          <RemoveFavourite removeFavourite={() => removeFavourite(f.name)} /> :\r\n                          <AddFavourite addFavourite={() => addFavourite(f.name)} />\r\n                        }\r\n                        <Delete deleteFriend={() => deleteFriend(f.name)} />\r\n                      </div>\r\n                    </div>\r\n                    <hr />\r\n                  </div>\r\n                )\r\n              }) : searchedList()\r\n            }\r\n          </div>\r\n          <Pagination\r\n            totalPage={totalPage}\r\n            page={page}\r\n            display={display}\r\n            setPage={setPageNo}\r\n            nextPage={changeNextPage}\r\n            previousPage={changePreviousPage}\r\n          />\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}